// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Xor.hdl

/**
 * Exclusive-or gate:
 * out = not (a == b)
 */

// Using Product of Sum Technique: https://www.allaboutcircuits.com/textbook/digital/chpt-7/converting-truth-tables-boolean-expressions/
// a OR b & (~a) OR (~b) is logically equivalent but implements the same number of pre-existing gates so no souce of optimization 

CHIP Xor {
    IN a, b;
    OUT out;

    PARTS:
    Not(in=a, out=nota);
    Not(in=b, out=notb);
    And(a=a, b=notb, out=tmpout1);
    And(a=nota, b=b, out=tmpout2);
    Or(a=tmpout1, b=tmpout2, out=out);
}